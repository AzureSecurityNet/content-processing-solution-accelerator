name: Build and Push Docker Images

on:
  push:
    branches: [main, dev, demo, hotfix]
  pull_request:
    branches: [main, dev, demo, hotfix]
    types: [opened, ready_for_review, reopened, synchronize]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
      ACR_USERNAME: ${{ secrets.ACR_USERNAME }}
      ACR_PASSWORD: ${{ secrets.ACR_PASSWORD }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Log in to Azure Container Registry
        if: ${{ github.ref_name == 'main' || github.ref_name == 'dev' || github.ref_name == 'demo' || github.ref_name == 'hotfix' }}
        uses: azure/docker-login@v2
        with:
          login-server: ${{ env.ACR_LOGIN_SERVER }}
          username: ${{ env.ACR_USERNAME }}
          password: ${{ env.ACR_PASSWORD }}

      - name: Set Docker image tags
        id: tag
        run: |
          BRANCH="${{ github.ref_name }}"
          DATE="${{ steps.date.outputs.date }}"
          if [[ "$BRANCH" == "main" ]]; then
            BASE_TAG="latest"
          elif [[ "$BRANCH" == "dev" ]]; then
            BASE_TAG="dev"
          elif [[ "$BRANCH" == "demo" ]]; then
            BASE_TAG="demo"
          elif [[ "$BRANCH" == "hotfix" ]]; then
            BASE_TAG="hotfix"
          else
            BASE_TAG="pullrequest-ignore"
          fi
          DATE_TAG="${BASE_TAG}-${DATE}"
          echo "BASE_TAG=${BASE_TAG}" >> $GITHUB_ENV
          echo "DATE_TAG=${DATE_TAG}" >> $GITHUB_ENV
          echo "Base tag: $BASE_TAG, Date tag: $DATE_TAG"

      - name: Build and push ContentProcessor Docker image
        run: |
          cd src/ContentProcessor
          IMAGE_NAME="$ACR_LOGIN_SERVER/contentprocessor"
          echo "Using image name: ${IMAGE_NAME}"
          # Build image with two tags: one base and one with date
          docker build -t ${IMAGE_NAME}:${BASE_TAG} -t ${IMAGE_NAME}:${DATE_TAG} -f Dockerfile .
          # Push both tags if the base tag is valid
          if [[ "${BASE_TAG}" == "latest" || "${BASE_TAG}" == "dev" || "${BASE_TAG}" == "demo" || "${BASE_TAG}" == "hotfix" ]]; then
            docker push ${IMAGE_NAME}:${BASE_TAG}
            docker push ${IMAGE_NAME}:${DATE_TAG}
            echo "ContentProcessor image built and pushed successfully."
          else
            echo "Skipping Docker push for ContentProcessor with tag: ${BASE_TAG}"
          fi

      - name: Build and push ContentProcessorAPI Docker image
        run: |
          cd src/ContentProcessorAPI
          IMAGE_NAME="$ACR_LOGIN_SERVER/contentprocessorapi"
          echo "Using image name: ${IMAGE_NAME}"
          docker build -t ${IMAGE_NAME}:${BASE_TAG} -t ${IMAGE_NAME}:${DATE_TAG} -f Dockerfile .
          if [[ "${BASE_TAG}" == "latest" || "${BASE_TAG}" == "dev" || "${BASE_TAG}" == "demo" || "${BASE_TAG}" == "hotfix" ]]; then
            docker push ${IMAGE_NAME}:${BASE_TAG}
            docker push ${IMAGE_NAME}:${DATE_TAG}
            echo "ContentProcessorAPI image built and pushed successfully."
          else
            echo "Skipping Docker push for ContentProcessorAPI with tag: ${BASE_TAG}"
          fi

      - name: Build and push ContentProcessorWeb Docker image
        run: |
          cd src/ContentProcessorWeb
          IMAGE_NAME="$ACR_LOGIN_SERVER/contentprocessorweb"
          echo "Using image name: ${IMAGE_NAME}"
          docker build -t ${IMAGE_NAME}:${BASE_TAG} -t ${IMAGE_NAME}:${DATE_TAG} -f Dockerfile .
          if [[ "${BASE_TAG}" == "latest" || "${BASE_TAG}" == "dev" || "${BASE_TAG}" == "demo" || "${BASE_TAG}" == "hotfix" ]]; then
            docker push ${IMAGE_NAME}:${BASE_TAG}
            docker push ${IMAGE_NAME}:${DATE_TAG}
            echo "ContentProcessorWeb image built and pushed successfully."
          else
            echo "Skipping Docker push for ContentProcessorWeb with tag: ${BASE_TAG}"
          fi
